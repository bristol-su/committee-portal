<?php

namespace App\Modules\ExitingTreasurer\Providers;

use App\Modules\ExitingTreasurer\Entities\Correction;
use App\Modules\ExitingTreasurer\Entities\Document;
use App\Modules\ExitingTreasurer\Entities\MissingIncomeAndExpenditure;
use App\Modules\ExitingTreasurer\Entities\OutstandingInvoice;
use App\Modules\ExitingTreasurer\Entities\Submission;
use App\Modules\ExitingTreasurer\Entities\UnauthorizedExpenseClaim;
use Illuminate\Support\Facades\Route;
use Illuminate\Foundation\Support\Providers\RouteServiceProvider as ServiceProvider;

class RouteServiceProvider extends ServiceProvider
{
    /**
     * The root namespace to assume when generating URLs to actions.
     *
     * @var string
     */
    protected $namespace = 'App\Modules\ExitingTreasurer\Http\Controllers';

    /**
     * Called before routes are registered.
     *
     * Register any model bindings or pattern based filters.
     *
     * @return void
     */
    public function boot()
    {
        Route::bind('exitingtreasurer_document', function($id) {
            return Document::findOrFail($id);
        });
        Route::bind('exitingtreasurer_expense_claim', function($id) {
            return UnauthorizedExpenseClaim::findOrFail($id);
        });
        Route::bind('exitingtreasurer_invoice', function($id) {
            return OutstandingInvoice::findOrFail($id);
        });
        Route::bind('exitingtreasurer_missing_i_and_e', function($id) {
            return MissingIncomeAndExpenditure::findOrFail($id);
        });
        Route::bind('exitingtreasurer_correction', function($id) {
            return Correction::findOrFail($id);
        });
        Route::bind('exitingtreasurer_submission', function($id) {
            return Submission::findOrFail($id);
        });
        parent::boot();

        require __DIR__ . '/../Routes/breadcrumbs.php';

    }

    /**
     * Define the routes for the application.
     *
     * @return void
     */
    public function map()
    {
        $this->mapApiRoutes();

        $this->mapWebRoutes();
    }

    /**
     * Define the "web" routes for the application.
     *
     * These routes all receive session state, CSRF protection, etc.
     *
     * @return void
     */
    protected function mapWebRoutes()
    {
        Route::middleware('web')
            ->namespace($this->namespace)
            ->group(__DIR__.'/../Routes/web.php');
    }

    /**
     * Define the "api" routes for the application.
     *
     * These routes are typically stateless.
     *
     * @return void
     */
    protected function mapApiRoutes()
    {
        Route::prefix('api')
            ->middleware('api')
            ->namespace($this->namespace)
            ->group(__DIR__.'/../Routes/api.php');
    }
}

