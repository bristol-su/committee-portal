<?php

namespace App\Modules\ExitingTreasurer\Entities;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Event;
use Illuminate\Support\Facades\Storage;
use Exception;

class TreasurerSignOffDocument extends Model
{

    protected $table = 'exitingtreasurer_treasurer_sign_off_documents';

    protected $fillable = [
        'title',
        'filename',
        'mime',
        'path',
        'size',
    ];

    public function getSafeFileName()
    {
        return mb_convert_encoding(
                str_replace([
                    '/', '\\', '%'
                ],
                    '_',
                    $this->title
                ), 'ASCII').
            $this->getExtension();
    }

    public function getExtension()
    {
        $extensionArray = explode('.', $this->filename);
        if(count($extensionArray) <= 1) {
            return '';
        }
        $extension = last($extensionArray);
        return ('.'.$extension ?: '');
    }

    public function group()
    {
        $missingIncomeAndExpenditure = $this->missingIncomeAndExpenditure;
        if(count($missingIncomeAndExpenditure) > 0) {
            return $missingIncomeAndExpenditure->first()->submission->group();
        }

        $corrections = $this->corrections;
        if(count($corrections) > 0) {
            return $corrections->first()->submission->group();
        }

        $outstandingInvoice = $this->outstandingInvoice->merge($this->outstandingInvoiceInvoice);
        if(count($outstandingInvoice) > 0) {
            return $outstandingInvoice->first()->submission->group();
        }

        throw new Exception('Group not found', 500);
    }

    public function missingIncomeAndExpenditure()
    {
        return $this->belongsToMany(MissingIncomeAndExpenditure::class,
            'exitingtreasurer_missing_iandes_treasurer_sign_off_documents',
            'treasurer_sign_off_document_id',
            'missing_iande_id'
        );
    }

    public function corrections()
    {
        return $this->belongsToMany(Correction::class,
            'exitingtreasurer_corrections_treasurer_sign_off_documents',
            'treasurer_sign_off_document_id',
            'correction_id'
        );
    }

    public function outstandingInvoiceInvoice()
    {
        return $this->hasMany(OutstandingInvoice::class,
            'invoice_id',
            'id'
            );
    }

    public function outstandingInvoice()
    {
        return $this->belongsToMany(OutstandingInvoice::class,
            'exitingtreasurer_outstanding_invoices_tres_documents',
            'treasurer_sign_off_document_id',
            'outstanding_invoice_id'
        );
    }

    public function uploadFile($document, $title)
    {
        if($this->filename === null) {

            if ($path = Storage::cloud()->put('exitingtreasurer-treasurer-sign-off', $document)) {

                $this->title = $title;
                $this->filename = $document->getClientOriginalName();
                $this->mime = $document->getClientMimeType();
                $this->path = $path;
                $this->size = $document->getSize();

                if ($this->save()) {
                    return $this;
                }

            }
        }

        return false;
    }
}

