<?php

namespace App\Modules\MainContacts\Providers;

use App\Modules\MainContacts\Emails\NotifyContactOnSubmission;
use App\Modules\MainContacts\Emails\NotifySubmitterOnSubmission;
use App\Modules\MainContacts\Entities\Submission;
use App\Packages\ControlDB\Models\CommitteeRole;
use App\Packages\ControlDB\Models\Group;
use App\Packages\ControlDB\Models\Position;
use App\Packages\ControlDB\Models\Student;
use App\Packages\ControlDB\Models\StudentTag;
use App\Traits\FindsUnionCloudUserByRoleName;
use Illuminate\Foundation\Support\Providers\EventServiceProvider as ServiceProvider;
use Illuminate\Support\Facades\Event;
use Illuminate\Support\Facades\Mail;

class EventServiceProvider extends ServiceProvider
{

    use FindsUnionCloudUserByRoleName;

    public function boot()
    {

        Event::listen('maincontacts.submitted', function(Submission $submission) {
            Mail::to($submission->user->email)->send(new NotifySubmitterOnSubmission($submission));
        });

        Event::listen('maincontacts.responsible', function(CommitteeRole $committeeRole, $situations) {
            $user = $this->getStudentByCommitteeRole($committeeRole);
            $group = Group::find($committeeRole->group_id);
            $newPresident = $this->newPresident($group);
            Mail::to($user->email)->send(new NotifyContactOnSubmission($user, $group,  $newPresident, $situations));
        });
    }
}
