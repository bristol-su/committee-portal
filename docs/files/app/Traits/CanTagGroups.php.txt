<?php
/**
 * Created by PhpStorm.
 * User: toby
 * Date: 24/03/19
 * Time: 12:49
 */

namespace App\Traits;


use ActiveResource\ConnectionManager;
use App\Packages\ControlDB\Models\Group;
use App\Packages\ControlDB\Models\GroupTag;
use Illuminate\Support\Collection;
use Illuminate\Support\Facades\Log;

trait CanTagGroups
{

    use CanSeeGroupTags;

    public function addOrUpdateTag($group, $categoryReference, $tagReference, $data=null)
    {
       if($this->groupHasTag($group, $categoryReference, $tagReference)) {
           $this->removeTag($group, $categoryReference, $tagReference);
       }

       $this->addTag($group, $categoryReference, $tagReference, $data);
    }

    public function removeTagIfOwned($group, $categoryReference, $tagReference)
    {
        if($this->groupHasTag($group, $categoryReference, $tagReference)) {
            $this->removeTag($group, $categoryReference, $tagReference);
        }
    }

    public function addTag(Group $group, $categoryReference, $tagReference, $data)
    {
        $groupTag = $this->getGroupTag($categoryReference, $tagReference);

        // Send request
        $connection = ConnectionManager::get('control');
        $request = $connection->buildRequest('post', 'groups/'.$group->id.'/group_tags', [], json_encode([
            'id' => [$groupTag->id],
            'data' => [$data['affiliation_name']]
        ]));
        $response = $connection->send($request);

        // Parse the response by hydrating the model
        if ($response->isSuccessful()) {
            return true;
        }

        return false;
    }

    public function removeTag($group, $categoryReference, $tagReference)
    {
        // Delete from group
        $groupTag = $this->getGroupTag($categoryReference, $tagReference);

        // Send request
        $connection = ConnectionManager::get('control');
        $request = $connection->buildRequest('delete', 'groups/'.$group->id.'/group_tags/'.$groupTag->id);
        $response = $connection->send($request);

        // Parse the response by hydrating the model
        if ($response->isSuccessful()) {
            return true;
        }

        return false;

    }
}
