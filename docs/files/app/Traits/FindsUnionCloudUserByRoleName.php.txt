<?php


namespace App\Traits;


use App\Packages\ControlDB\Models\CommitteeRole;
use App\Packages\ControlDB\Models\Group;
use Illuminate\Support\Collection;
use Twigger\UnionCloud\API\UnionCloud;

trait FindsUnionCloudUserByRoleName
{
    use AuthorizesUsers;

    public function oldTreasurer(Group $group)
    {
        return $this->getStudentByCommitteeRole($this->roles($group)->filter(function($role) {
            return $this->studentHasTreasurerPosition($role) && $this->studentIsOldCommittee($role);
        })->first());
    }

    public function newTreasurer(Group $group)
    {
        return $this->getStudentByCommitteeRole($this->roles($group)->filter(function($role) {
            return $this->studentHasTreasurerPosition($role) && $this->studentIsNewCommittee($role);
        })->first());
    }

    public function oldPresident(Group $group)
    {
        return $this->getStudentByCommitteeRole($this->roles($group)->filter(function($role) {
            return $this->studentHasPresidentialPosition($role) && $this->studentIsOldCommittee($role);
        })->first());
    }

    public function newPresident(Group $group)
    {
        return $this->getStudentByCommitteeRole($this->roles($group)->filter(function($role) {
            return $this->studentHasPresidentialPosition($role) && $this->studentIsNewCommittee($role);
        })->first());
    }

    /**
     * @param Group $group
     * @return Collection
     *
     * @throws \Exception
     */
    public function roles(Group $group)
    {
        $roles = CommitteeRole::allThrough($group)->merge(
            CommitteeRole::allThrough($group, ['year' => getReaffiliationYear() - 1])
        );
        if($roles === false) {
            throw new \Exception( 'No roles found for your group', 404);
        }
        return $roles;
    }

    public function getStudentByCommitteeRole($role) {
        if($role === null) {
            throw new \Exception( 'Committee member to notify not found', 404);
        }
        $uid = $role->student->uc_uid;
        return resolve(UnionCloud::class)->users()->getByUid($uid)->get()->first();
    }

    public function role($role)
    {
        return $role;
    }
}
